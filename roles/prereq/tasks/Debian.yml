---
- name: Disable swap
  become: true
  shell: |
    sudo swapoff -a
    sudo rm -f /swap.img
  when: ansible_swaptotal_mb > 0

- name: Install packages that allow apt to be used over HTTPS
  apt:
    name: 
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
    update_cache: yes
    state: present

- name: Install NFS helper
  apt:
    name: nfs-common
    state: present

- name: Install iptables
  apt:
    name: iptables
    state: present

- name: Install Python3 Pip
  apt:
    name: python3-pip
    state: present

- name: Gather the package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Check and Set the Python3 version
  ansible.builtin.set_fact:
    python3Version: "{{ ansible_facts.packages['python3'] | map(attribute='version') | first | split('.') }}"

- name: Fix externally managed error for Python3 PIP
  ansible.builtin.file:
    path: "/usr/lib/python3.{{ python3Version[1] }}/EXTERNALLY-MANAGED"
    state: absent

- name: Install kubernetes python package
  pip:
    name: 
      - kubernetes
      - pyyaml
      - openshift

- name: Flush iptables before changing to iptables-legacy
  iptables:
    flush: true
  changed_when: false   # iptables flush always returns changed

- name: Ensure iptables tooling does not use the nftables backend
  alternatives:
    name: iptables
    path: /usr/sbin/iptables-legacy

- name: Ensure ip6tables tooling does not use the nftables backend
  alternatives:
    name: ip6tables
    path: /usr/sbin/ip6tables-legacy

- name: Add the br_netfilter module
  community.general.modprobe:
    name: br_netfilter
    state: present

- name: Set net.bridge.bridge-nf-call-iptables on (1/2)
  copy:
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
    dest: /etc/sysctl.d/k8s.conf
  register: netbridge

- name: Set net.bridge.bridge-nf-call-iptables on (2/2)
  command: sysctl --system
  when: netbridge.changed

- name: Set ip forwarding on in /proc and in the sysctl file and reload if necessary
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes

- name: Set the current MAC address for the default enthernet port.
  set_fact:
    node_mac_address: "{{ hostvars[inventory_hostname].ansible_default_ipv4.macaddress }}"

- name: Set variables based on eth0 MAC address.
  set_fact:
    node_hostname: "{{ mac_address_mapping[node_mac_address].name }}"
    node_ip_address: "{{ mac_address_mapping[node_mac_address].ip }}"

- name: Set up networking-related files.
  template:
    src: "templates/{{ item.template }}"
    dest: "{{ item.dest }}"
    mode: 0644
  with_items:
    - { template: hostname.j2, dest: /etc/hostname }
    - { template: hosts.j2, dest: /etc/hosts }
    - { template: resolv.conf.j2, dest: /etc/resolv.conf }
  notify:
    - update hostname
    - reboot